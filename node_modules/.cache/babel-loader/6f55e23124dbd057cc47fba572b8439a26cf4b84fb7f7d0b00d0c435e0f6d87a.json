{"ast":null,"code":"var _jsxFileName = \"D:\\\\gas-station-report\\\\src\\\\GasStationReport.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport './GasStationReport.css'; // Import CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GasStationReport = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [totalAmount, setTotalAmount] = useState(null);\n\n  // State to check input errors\n  const [error, setError] = useState({\n    start: false,\n    end: false\n  });\n  const [fileUploaded, setFileUploaded] = useState(false); // State to check if a file is uploaded\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gas Station Transaction Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `upload-container ${!fileUploaded ? 'warning' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileUpload,\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"file-name\",\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Time (24h):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: e => {\n            setStartTime(e.target.value);\n            setError(prev => ({\n              ...prev,\n              start: false\n            })); // Reset error when input is provided\n          },\n          className: error.start ? \"input-error\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Time (24h):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: e => {\n            setEndTime(e.target.value);\n            setError(prev => ({\n              ...prev,\n              end: false\n            })); // Reset error when input is provided\n          },\n          className: error.end ? \"input-error\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCalculate,\n      children: \"Calculate Total\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), totalAmount !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Amount: \", totalAmount.toLocaleString(), \" VND\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(GasStationReport, \"fZ2k7NQtwKsAUV4Ah0Deit5rmvs=\");\n_c = GasStationReport;\nexport default GasStationReport;\nvar _c;\n$RefreshReg$(_c, \"GasStationReport\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","GasStationReport","_s","file","setFile","transactions","setTransactions","startTime","setStartTime","endTime","setEndTime","totalAmount","setTotalAmount","error","setError","start","end","fileUploaded","setFileUploaded","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","handleFileUpload","name","value","e","target","prev","onClick","handleCalculate","toLocaleString","_c","$RefreshReg$"],"sources":["D:/gas-station-report/src/GasStationReport.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport './GasStationReport.css'; // Import CSS file\r\n\r\nconst GasStationReport = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [totalAmount, setTotalAmount] = useState(null);\r\n\r\n  // State to check input errors\r\n  const [error, setError] = useState({ start: false, end: false });\r\n  const [fileUploaded, setFileUploaded] = useState(false); // State to check if a file is uploaded\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Gas Station Transaction Report</h2>\r\n\r\n      {/* File Upload Section */}\r\n      <div className={`upload-container ${!fileUploaded ? 'warning' : ''}`}>\r\n        <input \r\n          type=\"file\" \r\n          onChange={handleFileUpload} \r\n          className=\"file-input\"\r\n        />\r\n        {file && <p className=\"file-name\">{file.name}</p>}\r\n      </div>\r\n\r\n      <div>\r\n        <label>\r\n          Start Time (24h):\r\n          <input\r\n            type=\"time\"\r\n            value={startTime}\r\n            onChange={(e) => {\r\n              setStartTime(e.target.value);\r\n              setError((prev) => ({ ...prev, start: false })); // Reset error when input is provided\r\n            }}\r\n            className={error.start ? \"input-error\" : \"\"}\r\n          />\r\n        </label>\r\n        <label>\r\n          End Time (24h):\r\n          <input\r\n            type=\"time\"\r\n            value={endTime}\r\n            onChange={(e) => {\r\n              setEndTime(e.target.value);\r\n              setError((prev) => ({ ...prev, end: false })); // Reset error when input is provided\r\n            }}\r\n            className={error.end ? \"input-error\" : \"\"}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <button onClick={handleCalculate}>Calculate Total</button>\r\n\r\n      {totalAmount !== null && (\r\n        <div>\r\n          <h3>Total Amount: {totalAmount.toLocaleString()} VND</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GasStationReport;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\gas-station-report\\\\src\\\\GasStationReport.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport \"./GasStationReport.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GasStationReport = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [totalAmount, setTotalAmount] = useState(null);\n\n  // Hàm tải file Excel từ thư mục public và trích xuất dữ liệu\n  const loadExcelData = async () => {\n    const response = await fetch(\"/đề bài test_report.xlsx\"); // Đường dẫn tới file Excel trong thư mục public\n    const data = await response.arrayBuffer();\n    const workbook = XLSX.read(data, {\n      type: \"array\"\n    });\n    const firstSheetName = workbook.SheetNames[0];\n    const worksheet = workbook.Sheets[firstSheetName];\n    const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n      header: 1\n    });\n\n    // Trích xuất dữ liệu từ dòng 9 trở đi (theo cấu trúc file Excel bạn cung cấp)\n    const formattedData = jsonData.slice(8).map(row => {\n      var _row$;\n      return {\n        date: row[1],\n        // Cột \"Ngày\"\n        time: row[2],\n        // Cột \"Giờ\"\n        amount: parseFloat((_row$ = row[8]) === null || _row$ === void 0 ? void 0 : _row$.replace(/,/g, \"\")) // Cột \"Thành tiền\", loại bỏ dấu phẩy\n      };\n    });\n    setTransactions(formattedData);\n  };\n  useEffect(() => {\n    loadExcelData();\n  }, []);\n\n  // Hàm tính tổng thành tiền trong khoảng thời gian\n  const handleCalculate = () => {\n    const start = new Date(`2024-03-21T${startTime}`);\n    const end = new Date(`2024-03-21T${endTime}`);\n\n    // Lọc các giao dịch trong khoảng thời gian và tính tổng \"Thành tiền\"\n    const total = transactions.reduce((acc, transaction) => {\n      const transactionTime = new Date(`1970-01-01T${transaction.time}`);\n      if (transactionTime >= start && transactionTime <= end) {\n        return acc + (transaction.amount || 0);\n      }\n      return acc;\n    }, 0);\n    setTotalAmount(total);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gas Station Transaction Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: e => setStartTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: e => setEndTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"calculate-button\",\n      onClick: handleCalculate,\n      children: \"Calculate Total\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), totalAmount !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Amount: \", totalAmount.toLocaleString(), \" VND\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(GasStationReport, \"85tVdWnG5e9qnc8f6lXf24Hwh0A=\");\n_c = GasStationReport;\nexport default GasStationReport;\nvar _c;\n$RefreshReg$(_c, \"GasStationReport\");","map":{"version":3,"names":["React","useState","useEffect","XLSX","jsxDEV","_jsxDEV","GasStationReport","_s","transactions","setTransactions","startTime","setStartTime","endTime","setEndTime","totalAmount","setTotalAmount","loadExcelData","response","fetch","data","arrayBuffer","workbook","read","type","firstSheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","formattedData","slice","map","row","_row$","date","time","amount","parseFloat","replace","handleCalculate","start","Date","end","total","reduce","acc","transaction","transactionTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","toLocaleString","_c","$RefreshReg$"],"sources":["D:/gas-station-report/src/GasStationReport.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport \"./GasStationReport.css\";\r\n\r\nconst GasStationReport = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [totalAmount, setTotalAmount] = useState(null);\r\n\r\n  // Hàm tải file Excel từ thư mục public và trích xuất dữ liệu\r\n  const loadExcelData = async () => {\r\n    const response = await fetch(\"/đề bài test_report.xlsx\"); // Đường dẫn tới file Excel trong thư mục public\r\n    const data = await response.arrayBuffer();\r\n\r\n    const workbook = XLSX.read(data, { type: \"array\" });\r\n    const firstSheetName = workbook.SheetNames[0];\r\n    const worksheet = workbook.Sheets[firstSheetName];\r\n    const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n\r\n    // Trích xuất dữ liệu từ dòng 9 trở đi (theo cấu trúc file Excel bạn cung cấp)\r\n    const formattedData = jsonData.slice(8).map(row => ({\r\n      date: row[1], // Cột \"Ngày\"\r\n      time: row[2], // Cột \"Giờ\"\r\n      amount: parseFloat(row[8]?.replace(/,/g, \"\")) // Cột \"Thành tiền\", loại bỏ dấu phẩy\r\n    }));\r\n\r\n    setTransactions(formattedData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadExcelData();\r\n  }, []);\r\n\r\n  // Hàm tính tổng thành tiền trong khoảng thời gian\r\n  const handleCalculate = () => {\r\n    const start = new Date(`2024-03-21T${startTime}`);\r\n    const end = new Date(`2024-03-21T${endTime}`);\r\n\r\n    // Lọc các giao dịch trong khoảng thời gian và tính tổng \"Thành tiền\"\r\n    const total = transactions.reduce((acc, transaction) => {\r\n      const transactionTime = new Date(`1970-01-01T${transaction.time}`);\r\n      if (transactionTime >= start && transactionTime <= end) {\r\n        return acc + (transaction.amount || 0);\r\n      }\r\n      return acc;\r\n    }, 0);\r\n\r\n    setTotalAmount(total);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Gas Station Transaction Report</h2>\r\n\r\n      {/* Form nhập thời gian */}\r\n      <div className=\"time-input\">\r\n        <label>\r\n          Start Time: \r\n          <input\r\n            type=\"time\"\r\n            value={startTime}\r\n            onChange={(e) => setStartTime(e.target.value)}\r\n          />\r\n        </label>\r\n        <label>\r\n          End Time: \r\n          <input\r\n            type=\"time\"\r\n            value={endTime}\r\n            onChange={(e) => setEndTime(e.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* Nút tính toán */}\r\n      <button className=\"calculate-button\" onClick={handleCalculate}>\r\n        Calculate Total\r\n      </button>\r\n\r\n      {/* Hiển thị kết quả */}\r\n      {totalAmount !== null && (\r\n        <div className=\"result\">\r\n          <h3>Total Amount: {totalAmount.toLocaleString()} VND</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GasStationReport;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
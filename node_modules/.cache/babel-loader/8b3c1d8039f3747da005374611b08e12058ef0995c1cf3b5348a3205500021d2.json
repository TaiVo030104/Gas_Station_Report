{"ast":null,"code":"var _jsxFileName = \"D:\\\\gas-station-report\\\\src\\\\GasStationReport.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GasStationReport = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [totalAmount, setTotalAmount] = useState(null);\n\n  // Hàm xử lý file khi người dùng tải lên\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    setFile(file);\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        const data = new Uint8Array(event.target.result);\n        const workbook = XLSX.read(data, {\n          type: \"array\"\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n          header: 1\n        });\n\n        // Trích xuất dữ liệu từ dòng 7 (nơi chứa giao dịch) trở đi\n        const formattedData = jsonData.slice(7).map(row => {\n          var _row$;\n          return {\n            date: row[1],\n            // Cột \"Ngày\"\n            time: row[2],\n            // Cột \"Giờ\"\n            amount: parseFloat((_row$ = row[9]) === null || _row$ === void 0 ? void 0 : _row$.replace(/,/g, \"\")) // Cột \"Thành tiền\", loại bỏ dấu phẩy\n          };\n        });\n        setTransactions(formattedData);\n      };\n      reader.readAsArrayBuffer(file);\n    }\n  };\n\n  // Hàm tính tổng thành tiền trong khoảng thời gian\n  const handleCalculate = () => {\n    const start = new Date(`1970-01-01T${startTime}`);\n    const end = new Date(`1970-01-01T${endTime}`);\n\n    // Lọc các giao dịch trong khoảng thời gian và tính tổng \"Thành tiền\"\n    const total = transactions.reduce((acc, transaction) => {\n      const transactionTime = new Date(`1970-01-01T${transaction.time}`);\n      if (transactionTime >= start && transactionTime <= end) {\n        return acc + (transaction.amount || 0);\n      }\n      return acc;\n    }, 0);\n    setTotalAmount(total);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gas Station Transaction Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: e => setStartTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: e => setEndTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCalculate,\n      children: \"Calculate Total\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), totalAmount !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Amount: \", totalAmount.toLocaleString(), \" VND\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(GasStationReport, \"PjKqw51aPoy68AzchUoje0ykHLY=\");\n_c = GasStationReport;\nexport default GasStationReport;\nvar _c;\n$RefreshReg$(_c, \"GasStationReport\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","GasStationReport","_s","file","setFile","transactions","setTransactions","startTime","setStartTime","endTime","setEndTime","totalAmount","setTotalAmount","handleFileUpload","e","target","files","reader","FileReader","onload","event","data","Uint8Array","result","workbook","read","type","firstSheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","formattedData","slice","map","row","_row$","date","time","amount","parseFloat","replace","readAsArrayBuffer","handleCalculate","start","Date","end","total","reduce","acc","transaction","transactionTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","onClick","toLocaleString","_c","$RefreshReg$"],"sources":["D:/gas-station-report/src/GasStationReport.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst GasStationReport = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [totalAmount, setTotalAmount] = useState(null);\r\n\r\n  // Hàm xử lý file khi người dùng tải lên\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    setFile(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        const data = new Uint8Array(event.target.result);\r\n        const workbook = XLSX.read(data, { type: \"array\" });\r\n\r\n        const firstSheetName = workbook.SheetNames[0];\r\n        const worksheet = workbook.Sheets[firstSheetName];\r\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n\r\n        // Trích xuất dữ liệu từ dòng 7 (nơi chứa giao dịch) trở đi\r\n        const formattedData = jsonData.slice(7).map(row => ({\r\n          date: row[1], // Cột \"Ngày\"\r\n          time: row[2], // Cột \"Giờ\"\r\n          amount: parseFloat(row[9]?.replace(/,/g, \"\")) // Cột \"Thành tiền\", loại bỏ dấu phẩy\r\n        }));\r\n\r\n        setTransactions(formattedData);\r\n      };\r\n      reader.readAsArrayBuffer(file);\r\n    }\r\n  };\r\n\r\n  // Hàm tính tổng thành tiền trong khoảng thời gian\r\n  const handleCalculate = () => {\r\n    const start = new Date(`1970-01-01T${startTime}`);\r\n    const end = new Date(`1970-01-01T${endTime}`);\r\n\r\n    // Lọc các giao dịch trong khoảng thời gian và tính tổng \"Thành tiền\"\r\n    const total = transactions.reduce((acc, transaction) => {\r\n      const transactionTime = new Date(`1970-01-01T${transaction.time}`);\r\n      if (transactionTime >= start && transactionTime <= end) {\r\n        return acc + (transaction.amount || 0);\r\n      }\r\n      return acc;\r\n    }, 0);\r\n\r\n    setTotalAmount(total);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Gas Station Transaction Report</h2>\r\n      \r\n      {/* Form upload file */}\r\n      <div>\r\n        <input type=\"file\" onChange={handleFileUpload} />\r\n      </div>\r\n\r\n      {/* Form nhập thời gian */}\r\n      <div>\r\n        <label>\r\n          Start Time: \r\n          <input\r\n            type=\"time\"\r\n            value={startTime}\r\n            onChange={(e) => setStartTime(e.target.value)}\r\n          />\r\n        </label>\r\n        <label>\r\n          End Time: \r\n          <input\r\n            type=\"time\"\r\n            value={endTime}\r\n            onChange={(e) => setEndTime(e.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* Nút tính toán */}\r\n      <button onClick={handleCalculate}>Calculate Total</button>\r\n\r\n      {/* Hiển thị kết quả */}\r\n      {totalAmount !== null && (\r\n        <div>\r\n          <h3>Total Amount: {totalAmount.toLocaleString()} VND</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GasStationReport;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}